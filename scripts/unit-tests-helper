#!/bin/bash
set -ex -o pipefail

PACKAGE=$1

function printStatus {
  if [[ $? -eq 0 ]]; then
    echo -e "\\nSWEET SUITE SUCCESS"
  else
    echo -e "\\nSUITE FAILURE"
  fi
}
trap printStatus EXIT

bin_dir="$(dirname "$0")/../bin"
tmpdir=$(mktemp -d /tmp/cf-routing-downloads.XXXX)

echo "Some Gorouter tests require the machine to be Linux and not anything else like Windows or Mac"

# setup mysql and postgres
chown -R mysql:mysql /var/lib/mysql /var/log/mysql /var/run/mysqld
chown -R postgres:postgres /var/lib/postgresql /var/log/postgresql /var/run/postgresql /etc/postgresql
chown -R root:ssl-cert /etc/ssl/private

set +e
service rsyslog restart
service mysql restart
service postgresql restart

# get consul if needed
consul --version
consul_status=$?
set -e
if [[ ${consul_status} -ne 0 ]]; then
  curl -L -o "${tmpdir}/consul-0.6.3.zip" "https://releases.hashicorp.com/consul/0.6.3/consul_0.6.3_linux_amd64.zip"
  unzip -o "${tmpdir}/consul-0.6.3.zip" -d "./${bin_dir}"
  rm "${tmpdir}/consul-0.6.3.zip"
fi

export PATH=$PATH:$PWD/bin
go get github.com/nats-io/gnatsd
go get github.com/onsi/ginkgo/ginkgo
go get github.com/onsi/gomega

if [[ -n "${PACKAGE}" ]]; then
  pushd "./src/code.cloudfoundry.org/${PACKAGE}"
    ./bin/test
  popd
else
  for component in cf-tcp-router gorouter multierror route-registrar routing-api routing-api-cli uaa-go-client; do
    pushd src/code.cloudfoundry.org/${component}
      echo "Testing ${component}..."
      ./bin/test
    popd
  done
fi
